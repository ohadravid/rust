// MIR for `bitand` after PreCodegen

fn bitand(_1: &Blueprint, _2: &Blueprint) -> bool {
    debug a => _1;
    debug b => _2;
    let mut _0: bool;
    let mut _3: u32;
    let mut _4: u32;
    let mut _5: bool;
    let mut _6: u32;
    let mut _7: u32;
    let mut _8: bool;
    let mut _9: bool;
    let mut _10: u32;
    let mut _11: u32;
    let mut _12: bool;
    let mut _13: bool;
    let mut _14: u32;
    let mut _15: u32;
    let mut _16: bool;
    let mut _17: bool;
    let mut _18: u32;
    let mut _19: u32;
    let mut _20: bool;

    bb0: {
        _3 = copy ((*_1).0: u32);
        _4 = copy ((*_2).0: u32);
        _5 = Eq(move _3, move _4);
        _6 = copy ((*_1).1: u32);
        _7 = copy ((*_2).1: u32);
        _8 = Eq(move _6, move _7);
        _9 = BitAnd(move _5, move _8);
        _10 = copy ((*_1).2: u32);
        _11 = copy ((*_2).2: u32);
        _12 = Eq(move _10, move _11);
        _13 = BitAnd(move _9, move _12);
        _14 = copy ((*_1).3: u32);
        _15 = copy ((*_2).3: u32);
        _16 = Eq(move _14, move _15);
        _17 = BitAnd(move _13, move _16);
        _18 = copy ((*_1).4: u32);
        _19 = copy ((*_2).4: u32);
        _20 = Eq(move _18, move _19);
        _0 = BitAnd(move _17, move _20);
        return;
    }
}
